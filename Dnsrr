docker stack deploy --compose-file=docker-compose.yml mysql

version: '3.7'
services:
  db:
    image: "mysql:5.7"
    healthcheck:
      test: ["CMD-SHELL", 'mysqladmin ping']
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host

    deploy:
      endpoint_mode: dnsrr
      mode: "replicated"
      replicas: 2
      resources:
        limits:
          memory: 2G
    volumes:
      - foo:/var/lib/mysql

    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/my_file_secret
    secrets:
      - my_file_secret

secrets:
  my_file_secret:
    file: ./my_file_secret.txt

volumes:
  foo:
    driver: local
    
    
=============================================================================================================================================




version: '3.7'
services:
  db:
    image: mysql:5.7
    volumes:
      - db:/var/lib/mysql
    secrets:
      - db-password
    deploy:
      endpoint_mode: dnsrr
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db-password

  db-backup:
    image: mysql:5.7
    command: sh -c "while true; do /usr/bin/mysqldump -u root --password=$$(< $$MYSQL_ROOT_PASSWORD_FILE) --all-databases --host=db > /backup/backup$$(date +'%H').sql ; sleep 3600; done"
    volumes:
      - db-backup:/backup
    secrets:
      - db-password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db-password
    deploy:
      restart_policy:
        delay: 600s

volumes:
  db:
    driver: rexray/dobs
    driver_opts:
      size: 1
  db-backup:
    driver: rexray/dobs
    driver_opts:
      size: 1

secrets:
  db-password:
    file: ./secret-ghost-db
    name: db-password
